# Set an upstream called 'client' (our docker-compose service is called just like that, 'client')
upstream client {
  server client:3000; # Our service names (in this case 'client') can act as sort of host names/domains within Docker Compose, and 3000 is create-react-app's default port.
}

upstream node_api {
  server node_api:5000;
}

server {
  listen 80;

  location / {
    proxy_pass http://client; # domain name must be an upstream
  }

  # Allow websocket connections through /ws (for react's live reload, not needed in production)
  location /ws {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /api {
    # remove everything after /api/ and send it back instead, (e.g. /api/hello will become /hello). 
    # 'break' is used to make sure nginx doesn't try to match the new route to an existing one.
    rewrite /api/(.*) /$1 break; 
    proxy_pass http://node_api;
  }
}